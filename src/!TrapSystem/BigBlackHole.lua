---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by User.
--- DateTime: 11.11.2023 17:34
---
---
function StartBlackHole(unit,timed)
    local x, y = GetUnitXY(unit)
    local range = 1200
    if not timed then
        UnitAddAbility(unit, FourCC("Aloc"))
    else
        range = 2400
    end

    local data = HERO[0]
    local maxSpeed = 6
    local minSpeed = 0.2
    local realSpeed = 1
    local imp=range*2
    TimerStart(CreateTimer(), TIMER_PERIOD64, true, function()
        if udg_HoleIsWork then
            UnitDamageArea(unit, 30, x, y, 150)
            if IsUnitInRange(data.UnitHero, unit, range) then
                data.BH = unit
                local dist = DistanceBetweenXY(x, y, GetUnitXY(data.UnitHero))
                realSpeed = imp / dist
                if realSpeed >= maxSpeed then
                    realSpeed = maxSpeed
                end

                if realSpeed <= minSpeed then
                    realSpeed = minSpeed
                end
                data.BHSpeed=realSpeed
                --print(data.BHSpeed)
            else
                data.BH = nil
            end

            local e = nil
            GroupEnumUnitsInRange(perebor, x, y, range, nil)
            while true do
                e = FirstOfGroup(perebor)
                --print(GetUnitName(e), "в переборе")
                if e == nil then
                    break
                end

                if UnitAlive(e) and e ~= unit and not IsUnitType(e, UNIT_TYPE_HERO)  then
                    local angle = AngleBetweenUnits(e, unit)
                    if IsUnitInRange(e, unit, 50) then
                    else
                        local dist = DistanceBetweenXY(x, y, GetUnitXY(e))
                        realSpeed = imp / dist
                        if realSpeed >= maxSpeed then
                            realSpeed = maxSpeed
                        end

                        if realSpeed <= minSpeed then
                            realSpeed = minSpeed
                        end

                        UnitAddForceSimple(e, angle, realSpeed, 50)
                    end
                end
                GroupRemoveUnit(perebor, e)
            end
        else
            data.BH=nil
        end
        if timed then
            timed=timed-TIMER_PERIOD64
            if timed<=0 then
                DestroyTimer(GetExpiredTimer())
                data.BH=nil
                --print("временный БХ окончен")
            end
        end
        if not UnitAlive(unit) then
            DestroyTimer(GetExpiredTimer())
            data.BH=nil
        end
    end)
end