---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by User.
--- DateTime: 02.12.2023 20:26
---
function InitRailWagon()
    --print("ищем вагонетку")
    local _, k, rg = FindUnitOfType(FourCC("h00T"))

    for i = 1, #rg do
        StartRailWagon(rg[i])
    end
end

function StartRailWagon(unit)
    SetUnitZ(unit,GetUnitZ(unit)+20)
    UnitAddAbility(unit, FourCC("Aloc"))
    local unitsT = FindNearUnitByID(unit, FourCC("h00U"))
    local speed = 4
    local way = {
        x = 0,
        y = 0
    }
    for i = 1, #unitsT do
        way[i] = {
            x = GetUnitX(unitsT[i]),
            y = GetUnitY(unitsT[i])
        }
    end
    local currentPoint = 1
    TimerStart(CreateTimer(), 0.1, true, function()
        if currentPoint < #way then
        else
            currentPoint = 1
            --print("полный круг")
        end
        --print("двигаюсь в точку",currentPoint)
        local x, y = way[currentPoint].x, way[currentPoint].y
        --IssuePointOrder(unit,"move",x,y)
        local angle = -180 + AngleBetweenXY(x, y, GetUnitXY(unit)) / bj_DEGTORAD
        UnitAddForceSimpleClean(unit, angle, speed, 70,{"MoveWMe"})
        SetUnitFacing(unit,angle)
        if IsUnitInRangeXY(unit, x, y, 50) then
            currentPoint = currentPoint + 1
            --print("меняю направление на ",currentPoint)
        end
    end)
end

function FindNearUnitByID(unit, id)
    local e = nil
    local result = nil
    local min = 1000
    local x, y = GetUnitXY(unit)
    local range = 4000
    local unitsT = {}
    local distanceT = {}
    GroupEnumUnitsInRange(perebor, x, y, range, nil)
    while true do
        e = FirstOfGroup(perebor)
        --print("В переборе",GetUnitName(e))
        if e == nil then
            break
        end

        if GetUnitTypeId(e) == id then
            local dist = DistanceBetweenXY(x, y, GetUnitXY(e))
            if dist <= min then
                min = dist
                result = e
            end
            table.insert(unitsT, e)
            table.insert(distanceT, dist)

            --print("Близжайший",GetUnitName(e),dist)

        end
        GroupRemoveUnit(perebor, e)
    end

    TimerStart(CreateTimer(), 1, false, function()
        for i=1,#unitsT do
            UnitAddAbility(unitsT[i], FourCC("Aloc"))
            ShowUnit(unitsT[i], false)
            SetUnitInvulnerable(unitsT[i], true)
        end
    end)
    return unitsT
end

function SortUnitInTableByRange(unitsT, distanceT)

    table.sort(distanceT)
    for i = 1, #distanceT do
        print(i, tbl[i])
    end
end